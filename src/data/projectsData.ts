const projects = [
  {
    name: "SnapChef",
    description:
      "SnapChef is a mobile application designed to create customized recipes based on available products at home. The application makes use of AI to identify various ingredients (from a taken photo, a scanned receipt or a barcode), and then creates cooking recipes based on the given data and other preferences. In addition, the application provides step-by-step cooking guidance and allows its users to save and rate their recipes, as well as share them with friends.",
    tech: [
      "Flutter",
      "Dart",
      "Drift",
      "Text-to-Speech",
      "React",
      "Next.js",
      "Tailwind CSS",
      "TypeScript",
      "Node.js",
      "PM2",
      "MongoDB",
      "JWT",
      "Swagger",      
      "GCP",
      "Firebase Cloud Messaging",
      "Socket.IO",
    ],
    image: "/projects/SnapChef/icon.png",
    links: [
      { url: "https://snapchef-app.vercel.app/", label: "App Website" },
      { url: "https://github.com/eloritzkovitz/SnapChef", label: "GitHub - App" },
      {
        url: "https://github.com/eloritzkovitz/SnapChef-Server",
        label: "GitHub - Server",
      },
      {
        url: "https://github.com/eloritzkovitz/SnapChef-Web",
        label: "GitHub - Web",
      },
    ],
    involvement: [
      "Designed and implemented a cross-platform mobile application using Flutter and Dart, following UI/UX patterns and practices",
      "Implemented unit and widget tests using the Flutter testing framework and Mockito",
      "Collaborated with my team to build the backend server (Node.js + Express.js, TypeScript, MongoDB) and deploy it to a remote server using PM2",
      "Designed and implemented a RESTful API, providing comprehensive documentation with Swagger",
      "Helped design and develop the application's static website, using React, Next.js and Tailwind CSS",
      "Worked with technologies such as JWT, GCP (OAuth2, Cloud Vision, Generative AI, Vertex AI), Text-to-Speech, local & remote notifications and WebSockets",
      "Managed the project through Jira, using Agile methodologies",
    ],
    screenshots: [
      "/projects/SnapChef/screenshot1.png",
      "/projects/SnapChef/screenshot2.png",
      "/projects/SnapChef/screenshot3.png",
      "/projects/SnapChef/screenshot4.png",
      "/projects/SnapChef/screenshot5.png",
      "/projects/SnapChef/screenshot6.png",
      "/projects/SnapChef/screenshot7.png",
      "/projects/SnapChef/screenshot8.png",
    ],
  },
  {
    name: "Trevel",
    description:
      "Trevel is a social networking platform designed for users to share their travel experiences, post trip highlights, and interact with fellow travelers. Users can upload photos, write travel stories, comment on posts, and mark their favorite content. The platform integrates AI-powered content suggestions to enhance user experience and provide relevant travel insights.",
    tech: [
      "React",
      "Vite",
      "TypeScript",
      "Bootstrap",
      "CSS",
      "Node.js",
      "PM2",
      "MongoDB",
      "JWT",
      "Swagger",
      "GCP",
    ],
    image: "/projects/Trevel/icon.png",
    links: { url: "https://github.com/eloritzkovitz/Trevel", label: "GitHub" },
    involvement: [
      "Designed and implemented the application interface and frontend using React + Vite and TypeScript",
      "Developed the backend server (Node.js + Express.js, TypeScript, MongoDB) and deployed it to a remote server using PM2",
      "Designed and implemented a RESTful API, providing comprehensive documentation with Swagger",
      "Implemented testing suites with Jest",
      "Worked with technologies such as JWT, GCP (OAuth2, Generative AI)",
    ],
    screenshots: [
      "/projects/Trevel/screenshot1.png",
      "/projects/Trevel/screenshot2.png",
      "/projects/Trevel/screenshot3.png",
      "/projects/Trevel/screenshot4.png",
      "/projects/Trevel/screenshot5.png",
      "/projects/Trevel/screenshot6.png",
      "/projects/Trevel/screenshot7.png",
    ],
  },
  {
    name: "Voltrico",
    description:
      "An online appliances store, allowing users to browse products, add them to cart, perform orders and view them. Administrators can also add, edit and delete items, as well as view order history and statistics. Originally a college project written in JavaScript/CSS/HTML, this version has been completely rewritten in React and TypeScript to match newer standards.",
    tech: [
      "React",
      "Vite",
      "TypeScript",
      "Bootstrap",
      "CSS",
      "Node.js",
      "MongoDB",
      "JWT",
      "Swagger",
      "JavaScript",
      "HTML",
    ],
    image: "/projects/Voltrico/icon.png",
    links: { url: "https://github.com/eloritzkovitz/Voltrico", label: "GitHub" },
    involvement: [
      "Refactored legacy code from JavaScript/CSS/HTML to React and TypeScript",
      "Redesigned the application interface to a modern and user-friendly layout using Bootstrap",
      "Designed and implemented a RESTful API, providing comprehensive documentation with Swagger",
    ],
    screenshots: [],
  },
  {
    name: "Oopsify",
    description:
      "A simple, interactive React app for simulating and learning about HTTP error messages. This project was developed as a DevOps final project and demonstrates modern DevOps practices alongside frontend development.",
    tech: [      
      "React",
      "Vite",      
      "TypeScript",
      "CSS",      
      "Node.js",      
      "Docker",
      "Docker Compose", 
      "AWS", 
      "Ansible", 
      "Selenium",
      "Python",
      "GitHub Actions",
    ],
    image: "/projects/Oopsify/icon.png",
    links: [
    ],
    involvement: [
      "Developed a simple React application to simulate and learn about HTTP error messages",
      "Added a Dockerfile and Docker Compose configuration for easy deployment",      
      "Collaborated with my team to implement CI/CD pipelines using GitHub Actions, following DevOps practices",
    ],
    screenshots: [      
    ],
  },
  {
    name: "HexGame",
    description:
      "An abstract strategy board game implemented using React. The game allows two players to compete on a hexagonal board, with the goal of forming a connected path of their color linking two opposite sides of the board. The game logic relies on disjoint-set data structures to determine the winner.",
    tech: ["React", "Vite", "JavaScript", "CSS", "HTML"],
    image: "/projects/HexGame/icon.png",
    links: { url: "https://github.com/eloritzkovitz/HexGame", label: "GitHub" },
    involvement: [
      "Implemented the game logic using disjoint-set data structures",
      "Expanded a simple college assignment into a fully functional game using React",
      "Designed the game interface to be user-friendly and visually appealing",
      "Implemented a simple AI opponent for single-player mode",
    ],
    screenshots: [
      "/projects/HexGame/screenshot1.png",
      "/projects/HexGame/screenshot2.png",
      "/projects/HexGame/screenshot3.png",
      "/projects/HexGame/screenshot4.png",
      "/projects/HexGame/screenshot5.png",
    ],
  },  
];

export default projects;
